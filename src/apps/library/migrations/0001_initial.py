# Generated by Django 2.1.1 on 2018-10-09 20:10

# pylint: skip-file

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                ("author_id", models.AutoField(primary_key=True, serialize=False)),
                ("gutenberg_id", models.PositiveIntegerField(null=True)),
                ("first_name", models.CharField(max_length=255, null=True)),
                ("last_name", models.CharField(max_length=255, null=True)),
                ("birth_year", models.SmallIntegerField(null=True)),
                ("death_year", models.SmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                ("book_id", models.AutoField(primary_key=True, serialize=False)),
                ("gutenberg_id", models.PositiveIntegerField(null=True)),
                ("title", models.CharField(max_length=500)),
                ("subtitle", models.CharField(max_length=500, null=True)),
                ("lang", models.CharField(max_length=3)),
                ("highlight", models.PositiveIntegerField(default=0)),
                ("size", models.PositiveIntegerField(null=True)),
                (
                    "author",
                    models.ForeignKey(
                        db_column="author_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="books",
                        to="library.Author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("genre_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255, null=None)),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="genres",
            field=models.ManyToManyField(related_name="genres", to="library.Genre"),
        ),
    ]
